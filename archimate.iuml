' Credit to (https://github.com/ebbypeter/Archimate-PlantUML/blob/master/Archimate.puml)
' Copied from Archimate-PlantUML
' Version 0.1
' Url will come here...

' Styling
' ##################################
!unquoted procedure TECHN_FONT_SIZE 12
!unquoted procedure ELEMENT_FONT_COLOR #FFFFFF
!$BorderColor = "#9E9E9E"
!$BusColor = "#BUSINESS"
!$AppColor = "#APPLICATION"
!$TechColor = "#TECHNOLOGY"
!$ImplColor = "#IMPLEMENTATION"
!$StratColor = "#STRATEGY"
!$MotivColor = "#MOTIVATION"

skinparam defaultFontName "Open Sans"
skinparam defaultTextAlignment center
skinparam wrapWidth 400
skinparam maxMessageSize 150
skinparam StereotypeAlignment right
skinparam guillemet none
skinparam RectangleBorderColor $BorderColor

skinparam Arrow {
    Color $BorderColor
    FontColor #000000
    FontSize 10
}
skinparam Folder<<grouping>> {
    Shadowing true
    StereotypeFontSize 0
    FontColor #444444
    BorderColor $BorderColor
    BorderStyle dashed
}
skinparam Folder<<group>> {
    Shadowing true
    StereotypeFontSize 0
    FontColor #444444
    BackgroundColor lightgrey
}
skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 0
    FontColor #444444
    BorderColor $BorderColor
    BorderStyle dashed
}
skinparam node {
  StereotypeAlignment right
}
skinparam cloud {
  StereotypeAlignment right
  BorderColor $BorderColor
}
skinparam frame {
  StereotypeAlignment right
}
skinparam archimate {
  StereotypeAlignment right
  RoundCorner<<strategy-capability>> 25
  RoundCorner<<strategy-course-of-action>> 25
  RoundCorner<<business-process>> 25
  RoundCorner<<business-function>> 25
  RoundCorner<<business-interaction>> 25
  RoundCorner<<business-event>> 25
  RoundCorner<<business-service>> 25
  RoundCorner<<application-function>> 25
  RoundCorner<<application-interaction>> 25
  RoundCorner<<application-process>> 25
  RoundCorner<<application-event>> 25
  RoundCorner<<application-service>> 25
  RoundCorner<<technology-function>> 25
  RoundCorner<<technology-process>> 25
  RoundCorner<<technology-interaction>> 25
  RoundCorner<<technology-event>> 25
  RoundCorner<<technology-infra-service>> 25
  RoundCorner<<implementation-workpackage>> 25
  RoundCorner<<implementation-event>> 25
  DiagonalCorner<<motivation-stakeholder>> 12
  DiagonalCorner<<motivation-driver>> 12
  DiagonalCorner<<motivation-assessment>> 12
  DiagonalCorner<<motivation-goal>> 12
  DiagonalCorner<<motivation-outcome>> 12
  DiagonalCorner<<motivation-principle>> 12
  DiagonalCorner<<motivation-requirement>> 12
  DiagonalCorner<<motivation-constraint>> 12
  BorderColor $BorderColor
}
skinparam usecase {
  BorderColor $BorderColor
}

skinparam Component {
  BorderColor $BorderColor
}

skinparam RectangleRoundCorner<< <$archimate/business-process> >> 25
skinparam RectangleRoundCorner<< <$archimate/business-function> >> 25
skinparam RectangleRoundCorner<< <$archimate/application-process> >> 25
skinparam RectangleRoundCorner<< <$archimate/application-function> >> 25

' Layout
' ##################################
!unquoted procedure FOR_DISCUSSION()
    skinparam backgroundColor white
    skinparam handwritten true
    skinparam defaultFontName "Merienda"
    center footer For discussion, needs to be validated
!endprocedure
!procedure LAYOUT_TOP_DOWN()
top to bottom direction
!endprocedure
!procedure LAYOUT_LEFT_RIGHT()
left to right direction
!endprocedure

' Layout Helpers
' ##################################
!unquoted procedure Lay_D(e_from, e_to)
e_from -[hidden]D- e_to
!endprocedure
!unquoted procedure Lay_U(e_from, e_to)
e_from -[hidden]U- e_to
!endprocedure
!unquoted procedure Lay_R(e_from, e_to)
e_from -[hidden]R- e_to
!endprocedure
!unquoted procedure Lay_L(e_from, e_to)
e_from -[hidden]L- e_to
!endprocedure

' Boundaries
' ##################################
!unquoted procedure Boundary(e_alias, e_label)
rectangle "==e_label" <<boundary>> as e_alias
!endprocedure
!unquoted procedure Boundary(e_alias, e_label, e_type)
rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_type]</size>" <<boundary>> as e_alias
!endprocedure

' Elements
' ##################################
'Strategy Elements
!unquoted procedure Strategy_Resource(e_alias, e_label)
archimate $StratColor "e_label" <<strategy-resource>> as e_alias
!endprocedure
!unquoted procedure Strategy_Capability(e_alias, e_label)
archimate $StratColor "e_label" <<strategy-capability>> as e_alias
!endprocedure
!unquoted procedure Strategy_CourseOfAction(e_alias, e_label)
archimate $StratColor "e_label" <<strategy-course-of-action>> as e_alias
!endprocedure

'Business Elements
!unquoted procedure Business_Actor(e_alias, e_label)
archimate $BusColor "e_label" <<business-actor>> as e_alias
!endprocedure
!unquoted procedure Business_Role(e_alias, e_label)
archimate $BusColor "e_label" <<business-role>> as e_alias
!endprocedure
!unquoted procedure Business_Collaboration(e_alias, e_label)
archimate $BusColor "e_label" <<business-collaboration>> as e_alias
!endprocedure
!unquoted procedure Business_Interface(e_alias, e_label)
archimate $BusColor "e_label" <<business-interface>> as e_alias
!endprocedure
!unquoted procedure Business_Process(e_alias, e_label)
archimate $BusColor "e_label" <<business-process>> as e_alias
!endprocedure
!unquoted procedure Business_Function(e_alias, e_label)
archimate $BusColor "e_label" <<business-function>> as e_alias
!endprocedure
!unquoted procedure Business_Interaction(e_alias, e_label)
archimate $BusColor "e_label" <<business-interaction>> as e_alias
!endprocedure
!unquoted procedure Business_Event(e_alias, e_label)
archimate $BusColor "e_label" <<business-event>> as e_alias
!endprocedure
!unquoted procedure Business_Service(e_alias, e_label)
archimate $BusColor "e_label" <<business-service>> as e_alias
!endprocedure
!unquoted procedure Business_Object(e_alias, e_label)
archimate $BusColor "---\n e_label" <<business-object>> as e_alias
!endprocedure
!unquoted procedure Business_Contract(e_alias, e_label)
archimate $BusColor "---\n e_label \n---" <<business-contract>> as e_alias
!endprocedure
!unquoted procedure Business_Representation(e_alias, e_label)
archimate $BusColor "---\n e_label" <<business-representation>> as e_alias
!endprocedure
!unquoted procedure Business_Product(e_alias, e_label)
frame $BusColor "e_label" <<$archimate/business-product>> as e_alias
!endprocedure

!unquoted procedure Business_Process_Grp(e_alias, e_label)
rectangle "e_label" as e_alias << <$archimate/business-process> >> $BusColor
!endprocedure
!unquoted procedure Business_Function_Grp(e_alias, e_label)
rectangle "e_label" as e_alias << <$archimate/business-function> >> $BusColor
!endprocedure

'Application Elements
!unquoted procedure Application_Component(e_alias, e_label)
archimate $AppColor "e_label" <<application-component>> as e_alias
!endprocedure
!unquoted procedure Application_Collaboration(e_alias, e_label)
archimate $AppColor "e_label" <<application-collaboration>> as e_alias
!endprocedure
!unquoted procedure Application_Interface(e_alias, e_label)
archimate $AppColor "e_label" <<application-interface>> as e_alias
!endprocedure
!unquoted procedure Application_Function(e_alias, e_label)
archimate $AppColor "e_label" <<application-function>> as e_alias
!endprocedure
!unquoted procedure Application_Interaction(e_alias, e_label)
archimate $AppColor "e_label" <<application-interaction>> as e_alias
!endprocedure
!unquoted procedure Application_Process(e_alias, e_label)
archimate $AppColor "e_label" <<application-process>> as e_alias
!endprocedure
!unquoted procedure Application_Event(e_alias, e_label)
archimate $AppColor "e_label" <<application-event>> as e_alias
!endprocedure
!unquoted procedure Application_Service(e_alias, e_label)
archimate $AppColor "e_label" <<application-service>> as e_alias
!endprocedure
!unquoted procedure Application_DataObject(e_alias, e_label)
archimate $AppColor "---\n e_label" <<application-data-object>> as e_alias
!endprocedure

!unquoted procedure Application_Process_Grp(e_alias, e_label)
rectangle "e_label" as e_alias << <$archimate/application-process> >> $AppColor
!endprocedure
!unquoted procedure Application_Function_Grp(e_alias, e_label)
rectangle "e_label" as e_alias << <$archimate/application-function> >> $AppColor
!endprocedure
!unquoted procedure Application_Component_Grp(e_alias, e_label)
component "e_label" as e_alias $AppColor
!endprocedure

'Technology Elements
!unquoted procedure Technology_Node(e_alias, e_label)
archimate $TechColor "e_label" <<technology-node>> as e_alias
!endprocedure
!unquoted procedure Technology_Device(e_alias, e_label)
node $TechColor "e_label" <<$archimate/technology-device>> as e_alias
!endprocedure
!unquoted procedure Technology_SystemSoftware(e_alias, e_label)
archimate $TechColor "e_label" <<technology-system-software>> as e_alias
!endprocedure
!unquoted procedure Technology_Collaboration(e_alias, e_label)
archimate $TechColor "e_label" <<technology-collaboration>> as e_alias
!endprocedure
!unquoted procedure Technology_Interface(e_alias, e_label)
archimate $TechColor "e_label" <<technology-infra-interface>> as e_alias
!endprocedure
!unquoted procedure Technology_Path(e_alias, e_label)
archimate $TechColor "e_label" <<technology-communication-path>> as e_alias
!endprocedure
!unquoted procedure Technology_CommunicationNetwork(e_alias, e_label)
archimate $TechColor "e_label" <<technology-network>> as e_alias
!endprocedure
!unquoted procedure Technology_Function(e_alias, e_label)
archimate $TechColor "e_label" <<technology-function>> as e_alias
!endprocedure
!unquoted procedure Technology_Process(e_alias, e_label)
archimate $TechColor "e_label" <<technology-process>> as e_alias
!endprocedure
!unquoted procedure Technology_Interaction(e_alias, e_label)
archimate $TechColor "e_label" <<technology-interaction>> as e_alias
!endprocedure
!unquoted procedure Technology_Event(e_alias, e_label)
archimate $TechColor "e_label" <<technology-event>> as e_alias
!endprocedure
!unquoted procedure Technology_Service(e_alias, e_label)
archimate $TechColor "e_label" <<technology-infra-service>> as e_alias
!endprocedure
!unquoted procedure Technology_Artifact(e_alias, e_label)
archimate $TechColor "---\n e_label" <<technology-artifact>> as e_alias
!endprocedure

'Physical Elements
!unquoted procedure Physical_Equipment(e_alias, e_label)
archimate $PhysColor "e_label" <<physical-equipment>> as e_alias
!endprocedure
!unquoted procedure Physical_Facility(e_alias, e_label)
archimate $PhysColor "e_label" <<physical-facility>> as e_alias
!endprocedure
!unquoted procedure Physical_DistributionNetwork(e_alias, e_label)
archimate $PhysColor "e_label" <<physical-distribution-network>> as e_alias
!endprocedure
!unquoted procedure Physical_Material(e_alias, e_label)
archimate $PhysColor "---\n e_label" <<physical-material>> as e_alias
!endprocedure

'Motivation Elements
!unquoted procedure Motivation_Stakeholder(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-stakeholder>> as e_alias
!endprocedure
!unquoted procedure Motivation_Driver(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-driver>> as e_alias
!endprocedure
!unquoted procedure Motivation_Assessment(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-assessment>> as e_alias
!endprocedure
!unquoted procedure Motivation_Goal(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-goal>> as e_alias
!endprocedure
!unquoted procedure Motivation_Outcome(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-outcome>> as e_alias
!endprocedure
!unquoted procedure Motivation_Principle(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-principle>> as e_alias
!endprocedure
!unquoted procedure Motivation_Requirement(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-requirement>> as e_alias
!endprocedure
!unquoted procedure Motivation_Constraint(e_alias, e_label)
archimate $MotivColor "e_label" <<motivation-constraint>> as e_alias
!endprocedure
!unquoted procedure Motivation_Meaning(e_alias, e_label)
cloud $MotivColor "e_label" <<$archimate/motivation-meaning>> as e_alias
!endprocedure
!unquoted procedure Motivation_Value(e_alias, e_label)
usecase $MotivColor "e_label" as e_alias
!endprocedure

'Implementation Elements
!unquoted procedure Implementation_WorkPackage(e_alias, e_label)
archimate $ImplColor "e_label" <<implementation-workpackage>> as e_alias
!endprocedure
!unquoted procedure Implementation_Deliverable(e_alias, e_label)
archimate $ImplColor "---\n e_label" <<implementation-deliverable>> as e_alias
!endprocedure
!unquoted procedure Implementation_Event(e_alias, e_label)
archimate $ImplColor "e_label" <<implementation-event>> as e_alias
!endprocedure
!unquoted procedure Implementation_Plateau(e_alias, e_label)
node $PhysColor "e_label" <<$archimate/implementation-plateau>> as e_alias
!endprocedure
!unquoted procedure Implementation_Gap(e_alias, e_label)
archimate $PhysColor "---\n e_label" <<implementation-gap>> as e_alias
!endprocedure

'Other Elements
!unquoted procedure Location(e_alias, e_label)
archimate #ffbf80 "e_label" <<location>> as e_alias
!endprocedure
!unquoted procedure Location_Grp(e_alias, e_label)
rectangle "e_label" as e_alias << <$archimate/location> >> #ffbf80
!endprocedure
!unquoted procedure Junction_Or(e_alias, e_label)
circle #whitesmoke "e_label" as e_alias
!endprocedure
!unquoted procedure Junction_And(e_alias, e_label)
circle #black "e_label" as e_alias
!endprocedure
!unquoted procedure Grouping(e_alias, e_label)
Folder "e_label" <<grouping>> as e_alias
!endprocedure
!unquoted procedure Group(e_alias, e_label)
Folder "e_label" <<group>> as e_alias
!endprocedure

' Relationships
' ##################################
!unquoted procedure Rel_(e_sourceAlias, e_targetAlias, e_label, e_direction="")
e_sourceAlias e_direction e_targetAlias : "e_label"
!endprocedure

!unquoted procedure Rel_Composition(e_From, e_To, e_label="is composed of")
Rel_(e_From, e_To, e_label, "*--")
!endprocedure
!unquoted procedure Rel_Composition_Up(e_From, e_To, e_label="is composed of")
Rel_(e_From, e_To, e_label, "*-UP-")
!endprocedure
!unquoted procedure Rel_Composition_Down(e_From, e_To, e_label="is composed of")
Rel_(e_From, e_To, e_label, "*-DOWN-")
!endprocedure
!unquoted procedure Rel_Composition_Left(e_From, e_To, e_label="is composed of")
Rel_(e_From, e_To, e_label, "*-LEFT-")
!endprocedure
!unquoted procedure Rel_Composition_Right(e_From, e_To, e_label="is composed of")
Rel_(e_From, e_To, e_label, "*-RIGHT-")
!endprocedure

!unquoted procedure Rel_Aggregation(e_From, e_To, e_label="is aggregation of")
Rel_(e_From, e_To, e_label, "o--")
!endprocedure
!unquoted procedure Rel_Aggregation_Up(e_From, e_To, e_label="is aggregation of")
Rel_(e_From, e_To, e_label, "o-UP-")
!endprocedure
!unquoted procedure Rel_Aggregation_Down(e_From, e_To, e_label="is aggregation of")
Rel_(e_From, e_To, e_label, "o-DOWN-")
!endprocedure
!unquoted procedure Rel_Aggregation_Left(e_From, e_To, e_label="is aggregation of")
Rel_(e_From, e_To, e_label, "o-LEFT-")
!endprocedure
!unquoted procedure Rel_Aggregation_Right(e_From, e_To, e_label="is aggregation of")
Rel_(e_From, e_To, e_label, "o-RIGHT-")
!endprocedure

!unquoted procedure Rel_Assignment(e_From, e_To, e_label="is assigned to")
Rel_(e_From, e_To, e_label, "0-->")
!endprocedure
!unquoted procedure Rel_Assignment_Up(e_From, e_To, e_label="is assigned to")
Rel_(e_From, e_To, e_label, "0-UP->")
!endprocedure
!unquoted procedure Rel_Assignment_Down(e_From, e_To, e_label="is assigned to")
Rel_(e_From, e_To, e_label, "0-DOWN->")
!endprocedure
!unquoted procedure Rel_Assignment_Left(e_From, e_To, e_label="is assigned to")
Rel_(e_From, e_To, e_label, "0-LEFT->")
!endprocedure
!unquoted procedure Rel_Assignment_Right(e_From, e_To, e_label="is assigned to")
Rel_(e_From, e_To, e_label, "0-RIGHT->")
!endprocedure

!unquoted procedure Rel_Specialization(e_From, e_To, e_label="is specialization of")
Rel_(e_From, e_To, e_label, "--|>")
!endprocedure
!unquoted procedure Rel_Specialization_Up(e_From, e_To, e_label="is specialization of")
Rel_(e_From, e_To, e_label, "-UP-|>")
!endprocedure
!unquoted procedure Rel_Specialization_Down(e_From, e_To, e_label="is specialization of")
Rel_(e_From, e_To, e_label, "-DOWN-|>")
!endprocedure
!unquoted procedure Rel_Specialization_Left(e_From, e_To, e_label="is specialization of")
Rel_(e_From, e_To, e_label, "-LEFT-|>")
!endprocedure
!unquoted procedure Rel_Specialization_Right(e_From, e_To, e_label="is specialization of")
Rel_(e_From, e_To, e_label, "-RIGHT-|>")
!endprocedure

!unquoted procedure Rel_Serving(e_From, e_To, e_label="serves")
Rel_(e_From, e_To, e_label, "-->")
!endprocedure
!unquoted procedure Rel_Serving_Up(e_From, e_To, e_label="serves")
Rel_(e_From, e_To, e_label, "-UP->")
!endprocedure
!unquoted procedure Rel_Serving_Down(e_From, e_To, e_label="serves")
Rel_(e_From, e_To, e_label, "-DOWN->")
!endprocedure
!unquoted procedure Rel_Serving_Left(e_From, e_To, e_label="serves")
Rel_(e_From, e_To, e_label, "-LEFT->")
!endprocedure
!unquoted procedure Rel_Serving_Right(e_From, e_To, e_label="serves")
Rel_(e_From, e_To, e_label, "-RIGHT->")
!endprocedure

!unquoted procedure Rel_Association(e_From, e_To, e_label="")
Rel_(e_From, e_To, e_label, "--")
!endprocedure
!unquoted procedure Rel_Association_Up(e_From, e_To, e_label="")
Rel_(e_From, e_To, e_label, "-UP-")
!endprocedure
!unquoted procedure Rel_Association_Down(e_From, e_To, e_label="")
Rel_(e_From, e_To, e_label, "-DOWN-")
!endprocedure
!unquoted procedure Rel_Association_Left(e_From, e_To, e_label="")
Rel_(e_From, e_To, e_label, "-LEFT-")
!endprocedure
!unquoted procedure Rel_Association_Right(e_From, e_To, e_label="")
Rel_(e_From, e_To, e_label, "-RIGHT-")
!endprocedure

!unquoted procedure Rel_Flow(e_From, e_To, e_label="flows to")
Rel_(e_From, e_To, e_label, "..>>")
!endprocedure
!unquoted procedure Rel_Flow_Up(e_From, e_To, e_label="flows to")
Rel_(e_From, e_To, e_label, ".UP.>>")
!endprocedure
!unquoted procedure Rel_Flow_Down(e_From, e_To, e_label="flows to")
Rel_(e_From, e_To, e_label, ".DOWN.>>")
!endprocedure
!unquoted procedure Rel_Flow_Left(e_From, e_To, e_label="flows to")
Rel_(e_From, e_To, e_label, ".LEFT.>>")
!endprocedure
!unquoted procedure Rel_Flow_Right(e_From, e_To, e_label="flows to")
Rel_(e_From, e_To, e_label, ".RIGHT.>>")
!endprocedure

!unquoted procedure Rel_Realization(e_From, e_To, e_label="realizes")
Rel_(e_From, e_To, e_label, "..|>")
!endprocedure
!unquoted procedure Rel_Realization_Up(e_From, e_To, e_label="realizes")
Rel_(e_From, e_To, e_label, ".UP.|>")
!endprocedure
!unquoted procedure Rel_Realization_Down(e_From, e_To, e_label="realizes")
Rel_(e_From, e_To, e_label, ".DOWN.|>")
!endprocedure
!unquoted procedure Rel_Realization_Left(e_From, e_To, e_label="realizes")
Rel_(e_From, e_To, e_label, ".LEFT.|>")
!endprocedure
!unquoted procedure Rel_Realization_Right(e_From, e_To, e_label="realizes")
Rel_(e_From, e_To, e_label, ".RIGHT.|>")
!endprocedure

!unquoted procedure Rel_Triggering(e_From, e_To, e_label="triggers")
Rel_(e_From, e_To, e_label, "-->>")
!endprocedure
!unquoted procedure Rel_Triggering_Up(e_From, e_To, e_label="triggers")
Rel_(e_From, e_To, e_label, "-UP->>")
!endprocedure
!unquoted procedure Rel_Triggering_Down(e_From, e_To, e_label="triggers")
Rel_(e_From, e_To, e_label, "-DOWN->>")
!endprocedure
!unquoted procedure Rel_Triggering_Left(e_From, e_To, e_label="triggers")
Rel_(e_From, e_To, e_label, "-LEFT->>")
!endprocedure
!unquoted procedure Rel_Triggering_Right(e_From, e_To, e_label="triggers")
Rel_(e_From, e_To, e_label, "-RIGHT->>")
!endprocedure

!unquoted procedure Rel_Access(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "..")
!endprocedure
!unquoted procedure Rel_Access_Up(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".UP.")
!endprocedure
!unquoted procedure Rel_Access_Down(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".DOWN.")
!endprocedure
!unquoted procedure Rel_Access_Left(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".LEFT.")
!endprocedure
!unquoted procedure Rel_Access_Right(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".RIGHT.")
!endprocedure

!unquoted procedure Rel_Access_r(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<..")
!endprocedure
!unquoted procedure Rel_Access_r_Up(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.UP.")
!endprocedure
!unquoted procedure Rel_Access_r_Down(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.DOWN.")
!endprocedure
!unquoted procedure Rel_Access_r_Left(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.LEFT.")
!endprocedure
!unquoted procedure Rel_Access_r_Right(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.RIGHT.")
!endprocedure

!unquoted procedure Rel_Access_rw(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<..>")
!endprocedure
!unquoted procedure Rel_Access_rw_Up(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.UP.>")
!endprocedure
!unquoted procedure Rel_Access_rw_Down(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.DOWN.>")
!endprocedure
!unquoted procedure Rel_Access_rw_Left(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.LEFT.>")
!endprocedure
!unquoted procedure Rel_Access_rw_Right(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "<.RIGHT.>")
!endprocedure

!unquoted procedure Rel_Access_w(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, "..>")
!endprocedure
!unquoted procedure Rel_Access_w_Up(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".UP.>")
!endprocedure
!unquoted procedure Rel_Access_w_Down(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".DOWN.>")
!endprocedure
!unquoted procedure Rel_Access_w_Left(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".LEFT.>")
!endprocedure
!unquoted procedure Rel_Access_w_Right(e_From, e_To, e_label="accesses")
Rel_(e_From, e_To, e_label, ".RIGHT.>")
!endprocedure

!unquoted procedure Rel_Influence(e_From, e_To, e_label="influences")
Rel_(e_From, e_To, e_label, "-->")
!endprocedure
!unquoted procedure Rel_Influence_Up(e_From, e_To, e_label="influences")
Rel_(e_From, e_To, e_label, "-UP->")
!endprocedure
!unquoted procedure Rel_Influence_Down(e_From, e_To, e_label="influences")
Rel_(e_From, e_To, e_label, "-DOWN->")
!endprocedure
!unquoted procedure Rel_Influence_Left(e_From, e_To, e_label="influences")
Rel_(e_From, e_To, e_label, "-LEFT->")
!endprocedure
!unquoted procedure Rel_Influence_Right(e_From, e_To, e_label="influences")
Rel_(e_From, e_To, e_label, "-RIGHT->")
!endprocedure
